<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context 
                        http://www.springframework.org/schema/context/spring-context.xsd
	   				    http://www.springframework.org/schema/tx
        			    http://www.springframework.org/schema/tx/spring-tx.xsd
        			    http://www.springframework.org/schema/aop
        			    http://www.springframework.org/schema/aop/spring-aop.xsd
        			    http://www.springframework.org/schema/util
        			    http://www.springframework.org/schema/aop/spring-util.xsd
        			    http://www.springframework.org/schema/jee 
                        http://www.springframework.org/schema/jee/spring-jee.xsd"
       default-lazy-init="true">
    <!-- Activates scanning of @Autowired -->
    <context:annotation-config/>
    <context:component-scan base-package="com.dreamer" use-default-filters="true"/>
    <jee:jndi-lookup id="dataSource" jndi-name="jdbc/dealsdatasource" expected-type="javax.sql.DataSource"/>
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:hibernate.cfg.xml">
        </property>
        <!--<property name="entityInterceptor">-->
        <!--<bean class="com.finmechanics.audit.interceptor.AuditInterceptor" />-->
        <!--</property>-->
        <property name="hibernateProperties">
            <props>
                <prop key="dynamic-update">true</prop>
                <prop key="show_sql">true</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.SQLServer2012Dialect</prop>
                <prop key="hibernate.connection.autocommit">false</prop>
                <prop key="hibernate.query.factory_class">
                    org.hibernate.hql.internal.classic.ClassicQueryTranslatorFactory
                </prop>
                <!-- check db types before enabling -->
                <!--prop key="hibernate.hbm2ddl.auto">validate</prop -->
                <!--prop key="hibernate.hbm2ddl.auto">update</prop-->
                <prop key="hibernate.bytecode.use_reflection_optimizer">false</prop>
                <prop key="hibernate.format_sql">true</prop>

                <prop key="org.hibernate.envers.do_not_audit_optimistic_locking_field">false</prop>
                <prop key="hibernate.ejb.event.post-insert">
                    org.hibernate.ejb.event.EJB3PostInsertEventListener,org.hibernate.envers.event.AuditEventListener
                </prop>
                <prop key="hibernate.ejb.event.post-update">
                    org.hibernate.ejb.event.EJB3PostUpdateEventListener,org.hibernate.envers.event.AuditEventListener
                </prop>
                <prop key="hibernate.ejb.event.post-delete">
                    org.hibernate.ejb.event.EJB3PostDeleteEventListener,org.hibernate.envers.event.AuditEventListener
                </prop>
                <prop key="hibernate.ejb.event.pre-collection-update">org.hibernate.envers.event.AuditEventListener
                </prop>
                <prop key="hibernate.ejb.event.pre-collection-remove">org.hibernate.envers.event.AuditEventListener
                </prop>
                <prop key="hibernate.ejb.event.post-collection-recreate">org.hibernate.envers.event.AuditEventListener
                </prop>
            </props>
        </property>

    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>


</beans>
